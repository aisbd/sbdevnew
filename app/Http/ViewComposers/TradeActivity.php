<?phpnamespace App\Http\ViewComposers;use App\Market;use Illuminate\View\View;use App\Repositories\DataBanksIntradayRepository;use App\Repositories\DataBankEodRepository;use App\Repositories\InstrumentRepository;use DB;use Carbon\Carbon;class TradeActivity{    /**     * Bind data to the view.     *     * @param  View $view     * @return void     */    public function compose(View $view)    {        $viewdata = $view->getData();        $instrument_id = 13;        if (isset($viewdata['instrument_id']))            $instrument_id = (int)$viewdata['instrument_id'];        $market = Market::getActiveDates();        $market_id = $market[0]->id;        //////////////////////////// hot meter STARTS \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\        $hot_meter = array();        $yesterday_trade = $users = DB::table('data_banks_eods')->select('volume', 'market_id')->where('instrument_id', $instrument_id)->where('market_id', '<', $market_id)->orderByDesc('date')->limit(1)->get();        $yesterday_trade_vol = $yesterday_trade[0]->volume;                // taking market id from $yesterday_trade. this share may not be traded at previous market_id from $market          $yesterday_market_id = $yesterday_trade[0]->market_id;         $yday_market = DB::table('markets')->where('id', $yesterday_market_id)->get();        $yday_market_closed = Carbon::parse($yday_market[0]->market_closed);        $yday_market_started = Carbon::parse($yday_market[0]->market_started);        $yday_total_market_time = $yday_market_closed->timestamp - $yday_market_started->timestamp;        $avg_vol_per_second_yesterday_yesterday = $yesterday_trade_vol / $yday_total_market_time;        $latest_trade_data_this_instrument = DataBanksIntradayRepository::getMinuteData([$instrument_id], 0);        $latest_trade_data_this_instrument = $latest_trade_data_this_instrument[$instrument_id];        if (count($latest_trade_data_this_instrument)) {            $avg_vol_per_second_yesterday=$avg_vol_per_second_yesterday_yesterday;            foreach ($latest_trade_data_this_instrument as $key => $data) {                $last_minute = $data;                $last_timestamp = $last_minute->lm_date_time->timestamp;                $last_volume = $last_minute->total_volume;                if (isset($latest_trade_data_this_instrument[$key + 1])) {                    $prev_minute = $latest_trade_data_this_instrument[$key + 1];                    $prev_timestamp = $prev_minute->lm_date_time->timestamp;                    $prev_volume = $prev_minute->total_volume;                } else {                    $prev_volume = 0;                    $prev_timestamp = $market[0]->market_started->timestamp;                }                $sec = $last_timestamp - $prev_timestamp;                if ($sec) {                    $vol = $last_volume - $prev_volume;                    $avg_volume_this_period = $sec ? $vol / $sec : 0;                    $ratio = $avg_volume_this_period ? ($avg_volume_this_period / $avg_vol_per_second_yesterday) * 100 : 0;                    $ratio = round($ratio, 2);                    $trade_time = $last_minute->lm_date_time->format('H:i');                    if ($ratio > 100 and $ratio < 200) {                        $minutes = round($sec / 60, 2);                        $hot_meter[$trade_time]['type'] = "hot";                        $hot_meter[$trade_time]['icon_class'] = "fa fa-check";                        $hot_meter[$trade_time]['label_class'] = "label-default";                        $hot_meter[$trade_time]['message'] = "Something fishy! High volume than normal ($ratio%). $vol shares traded within $minutes minutes.";                    }                    if ($ratio > 199 and $ratio < 300) {                        $minutes = round($sec / 60, 2);                        $hot_meter[$trade_time]['type'] = "very_hot";                        $hot_meter[$trade_time]['label_class'] = "label-info";                        $hot_meter[$trade_time]['icon_class'] = "fa fa-check";                        $hot_meter[$trade_time]['message'] = "It's crazy !! Very high volume than normal ($ratio%). $vol shares traded within $minutes minutes.";                    }                    if ($ratio > 299 and $ratio < 500) {                        $minutes = round($sec / 60, 2);                        $hot_meter[$trade_time]['type'] = "extremely_hot";                        $hot_meter[$trade_time]['icon_class'] = "fa fa-check";                        $hot_meter[$trade_time]['label_class'] = "label-warning";                        $hot_meter[$trade_time]['message'] = "It's exploding !!! Extremely high volume than normal ($ratio%). $vol shares traded within $minutes minutes.";                    }                    if ($ratio > 499) {                        $minutes = round($sec / 60, 2);                        $hot_meter[$trade_time]['type'] = "abnormally_hot";                        $hot_meter[$trade_time]['icon_class'] = "fa fa-check";                        $hot_meter[$trade_time]['label_class'] = "label-danger";                        $hot_meter[$trade_time]['message'] = "It's mad now !!!! Abnormal high volume than normal ($ratio%). $vol shares traded within $minutes minutes.";                    }                }            }        }        $avg_vol_per_second_yesterday = (int)($avg_vol_per_second_yesterday * 60);        //////////////////////////// hot meter ENDS \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\        $view->with('hot_meter', $hot_meter)->with('avg_vol_per_second_yesterday', $avg_vol_per_second_yesterday);    }}